name: Publish Docker image

on:
  push:
    branches:
      - cicd
    tags: 
      - v*

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      final_tag: ${{ steps.determine-tag.outputs.final_tag }}
      all_tags: ${{ steps.capture-tags.outputs.all_tags }}  # Add a new output for all tags
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/my-image
          tags: |
            type=ref,event=tag   # Git tag
            type=sha              # Fallback to SHA

      - name: Build and push Docker image
        id: buildandpush
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Determine Docker tag or SHA
        id: determine-tag
        run: |
          echo "Determining final tag from: ${{ steps.meta.outputs.tags }}"
          TAGS=$(echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n')
          DOCKER_TAG=$(echo "$TAGS" | grep '^.*:v[0-9]' | awk -F':' '{print $NF}' | head -n 1)
          if [ -z "$DOCKER_TAG" ]; then
            DOCKER_TAG=$(echo "$TAGS" | grep '^.*:sha-' | awk -F':' '{print $NF}' | head -n 1)
          fi
          echo "Final tag to use: $DOCKER_TAG"
          echo "final_tag=$DOCKER_TAG" >> $GITHUB_OUTPUT
          echo "all_tags=$TAGS" >> $GITHUB_OUTPUT

  release:
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.build-and-push.outputs.final_tag }}  # Final tag used as release tag
          name: "Release ${{ needs.build-and-push.outputs.final_tag }}"  # Release name based on final tag
          body: |
            This release includes the Docker image with the following tags:
            - ${{ needs.build-and-push.outputs.all_tags }}.
            - Docker Image: `ghcr.io/${{ github.repository_owner }}/my-image:${{ needs.build-and-push.outputs.all_tags }}`
          allowUpdates: false
          draft: false
          prerelease: false

  deploy:
    runs-on: ubuntu-20.04
    needs: build-and-push
    environment: test-frontend-zminec
    env:
      FRONTEND_IMAGE_TAG: ${{ needs.build-and-push.outputs.final_tag }}
      FRONTEND_TEST: "testing FRONTEND"
    steps:
      - name: Deploy to server
        uses: garygrossgarten/github-action-ssh@0.8.0
        with:
          command: |
            export FRONTEND_IMAGE_TAG=${{ env.FRONTEND_IMAGE_TAG }}
            export FRONTEND_TEST=${{ env.FRONTEND_TEST }}
            echo "FRONTEND_IMAGE_TAG is: $FRONTEND_IMAGE_TAG"
            echo "FRONTEND_TEST is: $FRONTEND_TEST"
            env | grep FRONTEND
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSPHRASE }}
          privateKey: ${{ secrets.PRIVATE_KEY }}
